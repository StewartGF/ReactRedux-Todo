{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/Comentarios.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/seleccionado.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","addComentario","comentario","type","id","payload","todoSeleccionado","borrarToDo","editarComentario","Link","active","children","onClick","disabled","style","margin","className","connect","state","ownProps","filter","visibilityFilter","dispatch","Footer","FilterLink","input","onSubmit","e","text","preventDefault","value","trim","placeholder","aria-describedby","ref","node","Todo","completed","textDecoration","width","verticalAlign","textAlign","role","aria-label","todos","comentarios","con","todo","useSelector","seleccionado","useState","comentarioID","updateComentario","setUpdateComentario","useDispatch","isParrafoDisplayed","setIsParrafoDisplayed","isAreaDisplayed","setIsAreaDisplayed","parseInt","map","x","mensajes","concat","idComentario","handleChange","target","getAttribute","handleBotonToggle","handleBotonActualizar","key","marginBottom","display","name","onChange","color","toggleTodo","uuid","Comentario","setComentario","handleSend","verComentarios","evento","handleBlur","data-toggle","data-target","aria-expanded","aria-controls","marginRight","aria-labelledby","data-parent","onBlur","_id","float","getVisibleTodos","t","Error","TodoList","App","maxHeight","autoHide","VisibleTodoList","action","mensaje","initialState","combineReducers","store","createStore","rootReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.38aba5cc.chunk.js","sourcesContent":["let nextTodoId = 1;\n\nexport const addTodo = text => ({\n  type: \"ADD_TODO\",\n  id: nextTodoId++,\n  text\n});\n\nexport const setVisibilityFilter = filter => ({\n  type: \"SET_VISIBILITY_FILTER\",\n  filter\n});\n\nexport const toggleTodo = id => ({\n  type: \"TOGGLE_TODO\",\n  id\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n\nexport const addComentario = comentario => ({\n  type: \"ADD_COMENTARIO\",\n  id: comentario.id,\n  payload: comentario\n});\n\n//Action para guardar en el state el Todo Seleccionado para ver los comentarios\n\nexport const todoSeleccionado = id => ({\n  type: \"TODO_SELECCIONADO\",\n  payload: id\n});\n\nexport const borrarToDo = id => ({\n  type: \"BORRAR_TODO\",\n  payload: id\n});\n\nexport const editarComentario = comentario => ({\n  type: \"EDITAR_COMENTARIO\",\n  payload: comentario //trae id y  el comentario\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      margin: \"4px\"\n    }}\n    className=\"btn btn-outline-info\"\n  >\n    {children}\n  </button>\n);\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default Link;\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from \"react\";\nimport FilterLink from \"../containers/FilterLink\";\nimport { VisibilityFilters } from \"../actions\";\n\nconst Footer = () => (\n  <div>\n    <span>Mostrar: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>Todo</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Activos</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completados\n    </FilterLink>\n  </div>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../actions\";\n\nconst AddTodo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          if (!input.value.trim()) {\n            return;\n          }\n          dispatch(addTodo(input.value));\n          input.value = \"\";\n        }}\n      >\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Agregar ToDo\"\n            aria-describedby=\"button-addon2\"\n            ref={node => (input = node)}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btnFontSize btn-outline-secondary\"\n              type=\"submit\"\n              id=\"button-addon2\"\n            >\n              <i\n                className=\"fas fa-plus iconoAgregar\"\n                style={{ margin: \"2px\" }}\n              ></i>\n              <span className=\"textoAgregar\">AGREGAR</span>\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(AddTodo);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Todo = ({ onClick, completed, text }) => (\n  <div\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? \"line-through\" : \"none\",\n      width: \"50%\",\n      verticalAlign: \"middle !important\",\n      textAlign: \"center\"\n    }}\n  >\n    <span role=\"img\" aria-label=\"blue-diamond\">\n      🔹\n    </span>{\" \"}\n    {text}\n  </div>\n);\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { editarComentario } from \"../actions\";\r\n\r\nfunction Comentarios(todos) {\r\n  const todo = useSelector(state => state.todos); // recibo la información del state\r\n  const todoSeleccionado = useSelector(state => state.seleccionado);\r\n  const [updateComentario, setUpdateComentario] = useState({\r\n    id: 0,\r\n    comentario: \"\",\r\n    comentarioID: \"\"\r\n  });\r\n  const dispatch = useDispatch(); // Hook para usar dispatch\r\n  //cambiar el display\r\n  const [isParrafoDisplayed, setIsParrafoDisplayed] = useState(true);\r\n  const [isAreaDisplayed, setIsAreaDisplayed] = useState(false);\r\n  //cambiar el display\r\n\r\n  let comentarios;\r\n  let con;\r\n  if (todo) {\r\n    comentarios = todo\r\n      .filter(todo => todo.id === parseInt(todoSeleccionado.id))\r\n      .map(x => x.mensajes);\r\n    con = [].concat(...comentarios).map(x => ({\r\n      id: x.id,\r\n      comentario: x.comentario,\r\n      idComentario: x.comentarioID\r\n    }));\r\n  }\r\n\r\n  //HANDLES\r\n\r\n  const handleChange = e => {\r\n    setUpdateComentario({\r\n      id: e.target.id,\r\n      comentario: e.target.value,\r\n      comentarioID: e.target.getAttribute(\"name\")\r\n    });\r\n  };\r\n  const handleBotonToggle = () => {\r\n    setIsParrafoDisplayed(!isParrafoDisplayed);\r\n    setIsAreaDisplayed(!isAreaDisplayed);\r\n  };\r\n\r\n  const handleBotonActualizar = () => {\r\n    dispatch(editarComentario(updateComentario));\r\n    setIsAreaDisplayed(!isAreaDisplayed);\r\n    setIsParrafoDisplayed(!isParrafoDisplayed);\r\n  };\r\n  return (\r\n    <div className=\"container-comentarios\">\r\n      {con.map(comentario => (\r\n        <div\r\n          key={comentario.idComentario}\r\n          className=\"card comentario-item\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <div className=\"card-body descripcion \">\r\n            <div className=\"cardIzquierda \">\r\n              <p\r\n                style={{ display: isParrafoDisplayed ? \"block\" : \"none\" }}\r\n                className=\"texto\"\r\n              >\r\n                <span role=\"img\" aria-label=\"orange-diamond\">\r\n                  🔸\r\n                </span>{\" \"}\r\n                {comentario.comentario}\r\n              </p>\r\n              <textarea\r\n                id={comentario.id}\r\n                name={comentario.idComentario}\r\n                className=\"form-control tArea\"\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                style={{\r\n                  display: isAreaDisplayed ? \"block\" : \"none\"\r\n                }}\r\n              >\r\n                {comentario.comentario}\r\n              </textarea>\r\n            </div>\r\n            <div className=\"botonesCollapse \">\r\n              <button\r\n                className=\"btn btn-warning btnFontSize btnCollapseEditar\"\r\n                style={{\r\n                  color: \"white\",\r\n                  display: isParrafoDisplayed ? \"block\" : \"none\"\r\n                }}\r\n                onClick={handleBotonToggle}\r\n              >\r\n                <i id={comentario.id} className=\"fas fa-edit\"></i>\r\n                <span id={comentario.id} className=\"textoSpanOcultar\">\r\n                  Editar Comentario\r\n                </span>\r\n              </button>\r\n              <button\r\n                className=\"btn btn-success btnFontSize btnCollapseActualizar\"\r\n                style={{\r\n                  color: \"white\",\r\n                  display: isAreaDisplayed ? \"block\" : \"none\"\r\n                }}\r\n                onClick={handleBotonActualizar}\r\n              >\r\n                <i id={comentario.id} className=\"fas fa-edit\"></i>\r\n                <span id={comentario.id} className=\"textoSpanOcultar\">\r\n                  Actualizar\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div className=\"botonesCollapse \">\r\n              <button\r\n                className=\"btn btn-danger btnFontSize btnCollapseCancelar\"\r\n                style={{\r\n                  color: \"white\",\r\n                  display: isAreaDisplayed ? \"block\" : \"none\"\r\n                }}\r\n                onClick={handleBotonToggle}\r\n              >\r\n                <i id={comentario.id} className=\"fas fa-times-circle\"></i>\r\n                <span id={comentario.id} className=\"textoSpanOcultar\">\r\n                  Cancelar\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { todos } = state;\r\n  return {\r\n    todos: todos\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Comentarios);\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo\";\nimport { addComentario, todoSeleccionado, borrarToDo } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport Comentarios from \"./Comentarios\";\n\nfunction TodoList({ todos, toggleTodo, dispatch }) {\n  const [Comentario, setComentario] = useState({\n    id: 0,\n    comentario: \"\",\n    comentarioID: uuid()\n  });\n\n  const handleComentario = _id => {\n    setComentario({\n      ...Comentario,\n      id: _id,\n      comentarioID: uuid()\n    });\n    handleSend();\n  };\n  const handleChange = e => {\n    setComentario({\n      ...Comentario,\n      id: e.target.id,\n      comentario: e.target.value\n    });\n  };\n\n  const handleSend = () => {\n    dispatch(addComentario(Comentario));\n  };\n\n  const verComentarios = evento => {\n    dispatch(todoSeleccionado(evento.target.id));\n  };\n  const handleBlur = evento => {\n    evento.target.value = \"\";\n  };\n  return (\n    <>\n      <div className=\"accordion\" id=\"accordionExample\">\n        {todos.map(todo => (\n          <div key={todo.id} className=\"card\">\n            <div className=\"card-header\" id=\"headingOne\">\n              <div style={{ display: \"flex\" }}>\n                <Todo {...todo} onClick={() => toggleTodo(todo.id)} />\n\n                <div id=\"botonsito\" className=\"botonesCollapse \">\n                  <button\n                    id={todo.id}\n                    className=\"btn btnFontSize btn-danger btnCollapseBorrar\"\n                    onClick={() => dispatch(borrarToDo(todo.id))}\n                  >\n                    <i className=\"fas fa-trash-alt\"></i>\n                  </button>\n                </div>\n                <div id=\"botonsito\" className=\"botonesCollapse\">\n                  <button\n                    id={todo.id}\n                    onClick={verComentarios}\n                    className=\"btn btnFontSize btn-info btnCollapseComentarios \"\n                    data-toggle=\"collapse\"\n                    data-target={`#collapse${todo.id}`}\n                    aria-expanded=\"false\"\n                    aria-controls={`collapse${todo.id}`}\n                  >\n                    <i\n                      id={todo.id}\n                      className=\"far fa-comment-alt\"\n                      style={{ marginRight: \"3px\" }}\n                    />\n                    <span id={todo.id} className=\"textoSpanOcultar\">\n                      Ver Comentarios\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div\n              id={`collapse${todo.id}`}\n              className=\"collapse\"\n              aria-labelledby=\"headingOne\"\n              data-parent=\"#accordionExample\"\n            >\n              <div className=\"card-body row mx-auto\">\n                <div className=\"col-lg-12\">\n                  <Comentarios></Comentarios>\n                </div>\n                <div className=\"form-group col-lg-6 col-sm-12 mx-auto\">\n                  <input\n                    id={todo.id}\n                    type=\"text\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"col-lg-6 col-sm-12\">\n                  <button\n                    className=\"btnFontSize btn btn-success rounded-pill mt-1\"\n                    onClick={() => handleComentario(todo.id)}\n                    style={{ float: \"left\" }}\n                  >\n                    Agregar comentario\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default connect()(TodoList);\n","import { connect } from \"react-redux\";\nimport { toggleTodo } from \"../actions\";\nimport TodoList from \"../components/TodoList\";\nimport { VisibilityFilters } from \"../actions\";\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error(\"Unknown filter: \" + filter);\n  }\n};\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport AddTodo from \"../containers/AddTodo\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\nimport \"../App.css\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport uuid from \"react-uuid\";\n\nconst App = () => {\n  return (\n    <div key={uuid()} className=\"centered-content\">\n      <div className=\"container-todos row\">\n        <div className=\"sideMenu col-lg-12 col-sm-12\">\n          <SimpleBar style={{ maxHeight: \"95%\" }} autoHide={false}>\n            <AddTodo />\n            <VisibleTodoList />\n            <Footer />\n          </SimpleBar>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n          mensajes: [] //agrego el array con los mensajes\n        }\n      ];\n    case \"TOGGLE_TODO\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case \"ADD_COMENTARIO\":\n      return state.map(todo =>\n        todo.id === parseInt(action.id)\n          ? {\n              ...todo,\n              mensajes: [action.payload, ...todo.mensajes]\n            }\n          : todo\n      );\n    case \"BORRAR_TODO\":\n      return state.filter(todo => todo.id !== action.payload);\n\n    case \"EDITAR_COMENTARIO\":\n      return state.map(todos => {\n        return {\n          //clono el estado\n          ...todos,\n          //creo otro array de mensajes\n          mensajes: todos.mensajes.map(mensaje => {\n            //busco el comentario indicado para actualizar\n            if (mensaje.comentarioID === action.payload.comentarioID) {\n              return {\n                // clono el mensaje\n                ...mensaje,\n                //cambio el comentario por el comentario nuevo\n                comentario: action.payload.comentario\n              };\n            } else {\n              //si no son iguales, retorno el array por defecto\n              return { ...mensaje };\n            }\n          })\n        };\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","const initialState = {\r\n  id: -1\r\n};\r\n\r\nconst seleccionado = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TODO_SELECCIONADO\": {\r\n      return {\r\n        ...state,\r\n        id: action.payload //el Id seleccionado\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default seleccionado;\r\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport seleccionado from \"./seleccionado\";\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n  seleccionado\n});\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}