{"version":3,"sources":["actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/Comentarios.js","components/TodoList.js","containers/VisibleTodoList.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/seleccionado.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","addComentario","comentario","type","id","payload","todoSeleccionado","borrarToDo","editarComentario","Link","_ref","active","children","onClick","react_default","a","createElement","disabled","style","margin","className","connect","state","ownProps","filter","visibilityFilter","dispatch","Footer","FilterLink","input","onSubmit","e","text","preventDefault","value","trim","placeholder","aria-describedby","ref","node","Todo","completed","textDecoration","width","verticalAlign","textAlign","role","aria-label","todos","comentarios","con","todo","useSelector","seleccionado","_useState","useState","comentarioID","_useState2","Object","slicedToArray","updateComentario","setUpdateComentario","useDispatch","_useState3","_useState4","isParrafoDisplayed","setIsParrafoDisplayed","_useState5","_useState6","isAreaDisplayed","setIsAreaDisplayed","parseInt","map","x","mensajes","concat","apply","toConsumableArray","idComentario","handleChange","target","getAttribute","handleBotonToggle","handleBotonActualizar","key","marginBottom","display","name","onChange","color","toggleTodo","uuid","Comentario","setComentario","objectSpread","handleSend","verComentarios","evento","handleBlur","Fragment","components_Todo","assign","data-toggle","data-target","aria-expanded","aria-controls","marginRight","aria-labelledby","data-parent","components_Comentarios","onBlur","_id","float","getVisibleTodos","t","Error","TodoList","App","simplebar_react_esm","maxHeight","autoHide","containers_AddTodo","VisibleTodoList","components_Footer","arguments","length","undefined","action","mensaje","initialState","combineReducers","store","createStore","rootReducer","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3c1ed6ce.chunk.js","sourcesContent":["let nextTodoId = 1;\n\nexport const addTodo = text => ({\n  type: \"ADD_TODO\",\n  id: nextTodoId++,\n  text\n});\n\nexport const setVisibilityFilter = filter => ({\n  type: \"SET_VISIBILITY_FILTER\",\n  filter\n});\n\nexport const toggleTodo = id => ({\n  type: \"TOGGLE_TODO\",\n  id\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: \"SHOW_ALL\",\n  SHOW_COMPLETED: \"SHOW_COMPLETED\",\n  SHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n\nexport const addComentario = comentario => ({\n  type: \"ADD_COMENTARIO\",\n  id: comentario.id,\n  payload: comentario\n});\n\n//Action para guardar en el state el Todo Seleccionado para ver los comentarios\n\nexport const todoSeleccionado = id => ({\n  type: \"TODO_SELECCIONADO\",\n  payload: id\n});\n\nexport const borrarToDo = id => ({\n  type: \"BORRAR_TODO\",\n  payload: id\n});\n\nexport const editarComentario = comentario => ({\n  type: \"EDITAR_COMENTARIO\",\n  payload: comentario //trae id y  el comentario\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Link = ({ active, children, onClick }) => (\n  <button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      margin: \"4px\"\n    }}\n    className=\"btn btn-outline-info\"\n  >\n    {children}\n  </button>\n);\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default Link;\n","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n","import React from \"react\";\nimport FilterLink from \"../containers/FilterLink\";\nimport { VisibilityFilters } from \"../actions\";\n\nconst Footer = () => (\n  <div>\n    <span>Mostrar: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>Todo</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Activos</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n      Completados\n    </FilterLink>\n  </div>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../actions\";\n\nconst AddTodo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          if (!input.value.trim()) {\n            return;\n          }\n          dispatch(addTodo(input.value));\n          input.value = \"\";\n        }}\n      >\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Agregar ToDo\"\n            aria-describedby=\"button-addon2\"\n            ref={node => (input = node)}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btnFontSize btn-outline-secondary\"\n              type=\"submit\"\n              id=\"button-addon2\"\n            >\n              <i\n                className=\"fas fa-plus iconoAgregar\"\n                style={{ margin: \"2px\" }}\n              ></i>\n              <span className=\"textoAgregar\">AGREGAR</span>\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default connect()(AddTodo);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Todo = ({ onClick, completed, text }) => (\n  <div\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? \"line-through\" : \"none\",\n      width: \"50%\",\n      verticalAlign: \"middle !important\",\n      textAlign: \"center\"\n    }}\n  >\n    <span role=\"img\" aria-label=\"blue-diamond\">\n      🔹\n    </span>{\" \"}\n    {text}\n  </div>\n);\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { editarComentario } from \"../actions\";\r\n\r\nfunction Comentarios(todos) {\r\n  const todo = useSelector(state => state.todos); // recibo la información del state\r\n  const todoSeleccionado = useSelector(state => state.seleccionado);\r\n  const [updateComentario, setUpdateComentario] = useState({\r\n    id: 0,\r\n    comentario: \"\",\r\n    comentarioID: \"\"\r\n  });\r\n  const dispatch = useDispatch(); // Hook para usar dispatch\r\n  //cambiar el display\r\n  const [isParrafoDisplayed, setIsParrafoDisplayed] = useState(true);\r\n  const [isAreaDisplayed, setIsAreaDisplayed] = useState(false);\r\n  //cambiar el display\r\n\r\n  let comentarios;\r\n  let con;\r\n  if (todo) {\r\n    comentarios = todo\r\n      .filter(todo => todo.id === parseInt(todoSeleccionado.id))\r\n      .map(x => x.mensajes);\r\n    con = [].concat(...comentarios).map(x => ({\r\n      id: x.id,\r\n      comentario: x.comentario,\r\n      idComentario: x.comentarioID\r\n    }));\r\n  }\r\n\r\n  //HANDLES\r\n\r\n  const handleChange = e => {\r\n    setUpdateComentario({\r\n      id: e.target.id,\r\n      comentario: e.target.value,\r\n      comentarioID: e.target.getAttribute(\"name\")\r\n    });\r\n  };\r\n  const handleBotonToggle = () => {\r\n    setIsParrafoDisplayed(!isParrafoDisplayed);\r\n    setIsAreaDisplayed(!isAreaDisplayed);\r\n  };\r\n\r\n  const handleBotonActualizar = () => {\r\n    dispatch(editarComentario(updateComentario));\r\n    setIsAreaDisplayed(!isAreaDisplayed);\r\n    setIsParrafoDisplayed(!isParrafoDisplayed);\r\n  };\r\n  return (\r\n    <div className=\"container-comentarios\">\r\n      {con.map(comentario => (\r\n        <div\r\n          key={comentario.idComentario}\r\n          className=\"card comentario-item\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <div className=\"card-body descripcion \">\r\n            <div className=\"cardIzquierda \">\r\n              <p\r\n                style={{ display: isParrafoDisplayed ? \"block\" : \"none\" }}\r\n                className=\"texto\"\r\n              >\r\n                <span role=\"img\" aria-label=\"orange-diamond\">\r\n                  🔸\r\n                </span>{\" \"}\r\n                {comentario.comentario}\r\n              </p>\r\n              <textarea\r\n                id={comentario.id}\r\n                name={comentario.idComentario}\r\n                className=\"form-control tArea\"\r\n                type=\"text\"\r\n                placeholder={comentario.comentario}\r\n                onChange={handleChange}\r\n                style={{\r\n                  display: isAreaDisplayed ? \"block\" : \"none\"\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"botonesCollapse \">\r\n              <button\r\n                className=\"btn btn-warning btnFontSize btnCollapseEditar\"\r\n                style={{\r\n                  color: \"white\",\r\n                  display: isParrafoDisplayed ? \"block\" : \"none\"\r\n                }}\r\n                onClick={handleBotonToggle}\r\n              >\r\n                <i id={comentario.id} className=\"fas fa-edit\"></i>\r\n                <span id={comentario.id} className=\"textoSpanOcultar\">\r\n                  Editar Comentario\r\n                </span>\r\n              </button>\r\n              <button\r\n                className=\"btn btn-success btnFontSize btnCollapseActualizar\"\r\n                style={{\r\n                  color: \"white\",\r\n                  display: isAreaDisplayed ? \"block\" : \"none\"\r\n                }}\r\n                onClick={handleBotonActualizar}\r\n              >\r\n                <i id={comentario.id} className=\"fas fa-edit\"></i>\r\n                <span id={comentario.id} className=\"textoSpanOcultar\">\r\n                  Actualizar\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div className=\"botonesCollapse \">\r\n              <button\r\n                className=\"btn btn-danger btnFontSize btnCollapseCancelar\"\r\n                style={{\r\n                  color: \"white\",\r\n                  display: isAreaDisplayed ? \"block\" : \"none\"\r\n                }}\r\n                onClick={handleBotonToggle}\r\n              >\r\n                <i id={comentario.id} className=\"fas fa-times-circle\"></i>\r\n                <span id={comentario.id} className=\"textoSpanOcultar\">\r\n                  Cancelar\r\n                </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { todos } = state;\r\n  return {\r\n    todos: todos\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Comentarios);\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo\";\nimport { addComentario, todoSeleccionado, borrarToDo } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport uuid from \"react-uuid\";\nimport Comentarios from \"./Comentarios\";\n\nfunction TodoList({ todos, toggleTodo, dispatch }) {\n  const [Comentario, setComentario] = useState({\n    id: 0,\n    comentario: \"\",\n    comentarioID: uuid()\n  });\n\n  const handleComentario = _id => {\n    setComentario({\n      ...Comentario,\n      id: _id,\n      comentarioID: uuid()\n    });\n    handleSend();\n  };\n  const handleChange = e => {\n    setComentario({\n      ...Comentario,\n      id: e.target.id,\n      comentario: e.target.value\n    });\n  };\n\n  const handleSend = () => {\n    dispatch(addComentario(Comentario));\n  };\n\n  const verComentarios = evento => {\n    dispatch(todoSeleccionado(evento.target.id));\n  };\n  const handleBlur = evento => {\n    evento.target.value = \"\";\n  };\n  return (\n    <>\n      <div className=\"accordion\" id=\"accordionExample\">\n        {todos.map(todo => (\n          <div key={todo.id} className=\"card\">\n            <div className=\"card-header\" id=\"headingOne\">\n              <div style={{ display: \"flex\" }}>\n                <Todo {...todo} onClick={() => toggleTodo(todo.id)} />\n\n                <div id=\"botonsito\" className=\"botonesCollapse \">\n                  <button\n                    id={todo.id}\n                    className=\"btn btnFontSize btn-danger btnCollapseBorrar\"\n                    onClick={() => dispatch(borrarToDo(todo.id))}\n                  >\n                    <i className=\"fas fa-trash-alt\"></i>\n                  </button>\n                </div>\n                <div id=\"botonsito\" className=\"botonesCollapse\">\n                  <button\n                    id={todo.id}\n                    onClick={verComentarios}\n                    className=\"btn btnFontSize btn-info btnCollapseComentarios \"\n                    data-toggle=\"collapse\"\n                    data-target={`#collapse${todo.id}`}\n                    aria-expanded=\"false\"\n                    aria-controls={`collapse${todo.id}`}\n                  >\n                    <i\n                      id={todo.id}\n                      className=\"far fa-comment-alt\"\n                      style={{ marginRight: \"3px\" }}\n                    />\n                    <span id={todo.id} className=\"textoSpanOcultar\">\n                      Ver Comentarios\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div\n              id={`collapse${todo.id}`}\n              className=\"collapse\"\n              aria-labelledby=\"headingOne\"\n              data-parent=\"#accordionExample\"\n            >\n              <div className=\"card-body row mx-auto\">\n                <div className=\"col-lg-12\">\n                  <Comentarios></Comentarios>\n                </div>\n                <div className=\"form-group col-lg-6 col-sm-12 mx-auto\">\n                  <input\n                    id={todo.id}\n                    type=\"text\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className=\"form-control\"\n                  />\n                </div>\n                <div className=\"col-lg-6 col-sm-12\">\n                  <button\n                    className=\"btnFontSize btn btn-success rounded-pill mt-1\"\n                    onClick={() => handleComentario(todo.id)}\n                    style={{ float: \"left\" }}\n                  >\n                    Agregar comentario\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default connect()(TodoList);\n","import { connect } from \"react-redux\";\nimport { toggleTodo } from \"../actions\";\nimport TodoList from \"../components/TodoList\";\nimport { VisibilityFilters } from \"../actions\";\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error(\"Unknown filter: \" + filter);\n  }\n};\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport AddTodo from \"../containers/AddTodo\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\nimport \"../App.css\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport uuid from \"react-uuid\";\n\nconst App = () => {\n  return (\n    <div key={uuid()} className=\"centered-content\">\n      <div className=\"container-todos row\">\n        <div className=\"sideMenu col-lg-12 col-sm-12\">\n          <SimpleBar style={{ maxHeight: \"95%\" }} autoHide={false}>\n            <AddTodo />\n            <VisibleTodoList />\n            <Footer />\n          </SimpleBar>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n          mensajes: [] //agrego el array con los mensajes\n        }\n      ];\n    case \"TOGGLE_TODO\":\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    case \"ADD_COMENTARIO\":\n      return state.map(todo =>\n        todo.id === parseInt(action.id)\n          ? {\n              ...todo,\n              mensajes: [action.payload, ...todo.mensajes]\n            }\n          : todo\n      );\n    case \"BORRAR_TODO\":\n      return state.filter(todo => todo.id !== action.payload);\n\n    case \"EDITAR_COMENTARIO\":\n      return state.map(todos => {\n        return {\n          //clono el estado\n          ...todos,\n          //creo otro array de mensajes\n          mensajes: todos.mensajes.map(mensaje => {\n            //busco el comentario indicado para actualizar\n            if (mensaje.comentarioID === action.payload.comentarioID) {\n              return {\n                // clono el mensaje\n                ...mensaje,\n                //cambio el comentario por el comentario nuevo\n                comentario: action.payload.comentario\n              };\n            } else {\n              //si no son iguales, retorno el array por defecto\n              return { ...mensaje };\n            }\n          })\n        };\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter\n    default:\n      return state\n  }\n}\n\nexport default visibilityFilter\n","const initialState = {\r\n  id: -1\r\n};\r\n\r\nconst seleccionado = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TODO_SELECCIONADO\": {\r\n      return {\r\n        ...state,\r\n        id: action.payload //el Id seleccionado\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default seleccionado;\r\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport visibilityFilter from \"./visibilityFilter\";\nimport seleccionado from \"./seleccionado\";\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n  seleccionado\n});\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}